// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserProduct.DAL;

namespace UserProduct.DAL.Migrations
{
    [DbContext(typeof(UserProductDBContext))]
    partial class UserProductDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("UserProduct.DAL.Entity.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("UserProduct.DAL.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(665),
                            Description = "P1 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P1",
                            Price = 12.33m
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6175),
                            Description = "P2 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P2",
                            Price = 13.33m
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6380),
                            Description = "P3 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P3",
                            Price = 14.33m
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6394),
                            Description = "P4 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P4",
                            Price = 15.33m
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6405),
                            Description = "P5 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P5",
                            Price = 16.33m
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6422),
                            Description = "P6 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P6",
                            Price = 17.33m
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6433),
                            Description = "P7 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P7",
                            Price = 18.33m
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6443),
                            Description = "P8 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P8",
                            Price = 19.33m
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6454),
                            Description = "P9 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P9",
                            Price = 20.33m
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6464),
                            Description = "P10 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P10",
                            Price = 21.33m
                        },
                        new
                        {
                            Id = 11,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6475),
                            Description = "P11 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P11",
                            Price = 22.33m
                        },
                        new
                        {
                            Id = 12,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6486),
                            Description = "P12 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P12",
                            Price = 23.33m
                        },
                        new
                        {
                            Id = 13,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6496),
                            Description = "P13 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P13",
                            Price = 24.33m
                        },
                        new
                        {
                            Id = 14,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6507),
                            Description = "P14 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P14",
                            Price = 25.33m
                        },
                        new
                        {
                            Id = 15,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 928, DateTimeKind.Local).AddTicks(6517),
                            Description = "P15 Description...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "P15",
                            Price = 26.33m
                        });
                });

            modelBuilder.Entity("UserProduct.DAL.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EMailAddress")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 917, DateTimeKind.Local).AddTicks(8564),
                            EMailAddress = "test@test.test",
                            FirstName = "Ahmet",
                            IdentityNumber = "11111111111",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Ekmekci",
                            PhoneNumber = "5555555555"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2020, 12, 25, 2, 8, 10, 922, DateTimeKind.Local).AddTicks(5459),
                            EMailAddress = "testtest@test.test",
                            FirstName = "XXX",
                            IdentityNumber = "22222222222",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "YYY",
                            PhoneNumber = "5445555555"
                        });
                });

            modelBuilder.Entity("UserProduct.DAL.Entity.Cart", b =>
                {
                    b.HasOne("UserProduct.DAL.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserProduct.DAL.Entity.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
